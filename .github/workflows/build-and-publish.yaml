name: Python package

permissions:
    id-token: write
    contents: write

on:
    push:
      paths-ignore:
        - 'README.md'

      branches:
        - master
        - develop
    
    pull_request: 
      branches: 
        - develop
        - master
      paths-ignore:
        - 'README.md'

env:
  PYTHON_VERSION: "3.9"
  POETRY_VERSION: "1.7.0"
  RELEASE_BRANCH: "master"

jobs:
    build:
        runs-on: "ubuntu-latest"
        steps:
            - uses: actions/checkout@v3

            - name: Install xetex # TODO: cache latex
              run: |
                sudo apt update
                sudo apt install -y texlive-xetex texlive-fonts-recommended texlive-latex-recommended

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ env.PYTHON_VERSION }}

            - name: Install and configure Poetry
              uses: snok/install-poetry@v1
              with:
                  version: ${{ env.POETRY_VERSION }}
                  virtualenvs-create: false
                  virtualenvs-in-project: true
                  installer-parallel: true

            - name: Load cache
              id: cached-poetry-dependencies
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pypoetry
                  key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}
            
            - name: Install dependencies
              run: |
                poetry self add poetry-version-plugin  
                poetry install --no-interaction --only main,dev,doc

            - name: Run tests
              working-directory: ${{ runner.temp }}
              run: |
                pytest ${{ github.workspace}}/tests

            - name: Build doc
              run: sphinx-build -n -b html ./docs/source/ ./docs/build/
            
            - uses: actions/upload-artifact@master
              if: ${{ github.event_name == 'push' && github.ref_name == env.RELEASE_BRANCH }}
              with:
                  name: html-doc
                  path: ./docs/build/

    release:
        runs-on: "ubuntu-latest"    
        needs: build
        if: ${{ github.ref_name == 'master' }}

        steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
            ref: ${{ github.head_ref || github.ref_name }}
        
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: ${{ env.PYTHON_VERSION }}

        - name: Install and configure Poetry
          uses: snok/install-poetry@v1
          with:
            version: ${{ env.POETRY_VERSION }}
            virtualenvs-create: false
            virtualenvs-in-project: true
            installer-parallel: true

        - name: Install dependencies
          run: |
            poetry self add poetry-version-plugin  

        - name: Python Semantic Release
          id: release
          uses: python-semantic-release/python-semantic-release@v8.3.0
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            root_options: "-v"
            changelog: false

        - name: Downloading doc
          uses: actions/download-artifact@master
          if: ${{ steps.release.outputs.released == 'true' }}
          with:
            name: html-doc
            path: ./docs/build/

        - name: Upload to PyPi
          if: ${{ steps.release.outputs.released == 'true' }}
          run: |
            poetry publish --build -n --no-ansi -u ${{ secrets.PYPI_USER }} -p ${{ secrets.PYPI_TOKEN }}
        
        - name: Deploy doc
          uses: peaceiris/actions-gh-pages@v3
          if: ${{ steps.release.outputs.released == 'true' }}
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: ./docs/build/

